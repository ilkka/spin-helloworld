version: "3"

tasks:
  build:
    desc: Do release build
    deps:
      - init
    cmds:
      - cargo build --release --target wasm32-wasi
    sources:
      - "./src/**/*.rs"
      - Cargo.*
    generates:
      - target/wasm32-wasi/release/spin_helloworld.wasm

  image:build:
    cmds:
      - docker build -t spin-helloworld:v0.0.1 .

  image:load:
    cmds:
      - kind load docker-image spin-helloworld:v0.0.1 --name spin-helloworld-dev

  init:
    desc: Initialize dev environment
    cmds:
      - task: init:target
      - task: init:wasmtime
      - task: init:spin
      - task: init:spin-plugin

  deploy:
    desc: Deploy to cluster
    deps:
      - cluster
    cmds:
      - task: image:build
      - task: image:load
      - kubectl apply -f ./k8s/helloworld.yaml

  teardown:
    desc: Tear down environment
    cmds:
      - task: cluster:remove

  cluster:
    cmds:
      - task: cluster:node-image
      - task: cluster:create
      - kubectl apply -f ./k8s/runtime-class.yaml

  init:target:
    cmds:
      - rustup target add wasm32-wasi
    status:
      - rustup target list --installed | grep -q wasm32-wasi

  init:wasmtime:
    cmds:
      - echo "Install wasmtime before continuing"
      - read -p "Press enter to continue:"
    status:
      - command -v wasmtime &>/dev/null

  init:spin:
    cmds:
      - echo "Install spin before continuing"
      - read -p "Press enter to continue:"
    status:
      - command -v fermyon-spin &>/dev/null

  init:spin-plugin:
    cmds:
      - echo "Install spin k8s plugin with 'fermyon-spin plugin install -u https://raw.githubusercontent.com/chrismatteson/spin-plugin-k8s/main/k8s.json' before continuing"
      - read -p "Press enter to continue:"
    status:
      - fermyon-spin plugins list --installed | grep -q ^k8s

  init:kind:
    cmds:
      - echo "Install kind before continuing"
      - read -p "Press enter to continue:"
    status:
      - command -v kind &>/dev/null

  cluster:node-image:
    sources:
      - "./node-image/**/*"
    method: checksum
    cmds:
      - docker build -t kind-node-image node-image

  cluster:create:
    deps:
      - init:kind
    cmds:
      - kind create cluster --config kind-config.yaml --image kind-node-image
    status:
      - kind get clusters 2>/dev/null | grep -q spin-helloworld-dev

  cluster:remove:
    deps:
      - init:kind
    cmds:
      - kind delete cluster --name spin-helloworld-dev
